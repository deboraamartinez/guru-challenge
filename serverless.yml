
org: deboraamartinez
app: challange-guru-5
service: notes-app-node-aws
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  httpApi:
    cors: true
  stage: ${opt:stage, 'dev'}


  environment:
    NOTES_TABLE: note-table-${self:provider.stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:CreateTable
          Resource: "arn:aws:dynamodb:us-east-1:*:*"

custom:
  stages:
    - dev
    - prod
    
functions:
  create:
    handler: src/handlers/createNote/index.handler
    events:
      - http:
          path: /toDo
          method: post
  
  delete:
    handler: src/handlers/deleteNote/index.handler
    events:
      - http:
          path: /toDo/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true

  read:
    handler: src/handlers/readNote/index.handler
    events:
      - http:
          path: /toDo/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  update:
    handler: src/handlers/updateNote/index.handler
    events:
      - http:
          path: /toDo/{id}
          method: patch
          request:
            parameters:
              paths:
                id: true

  readAll:
    handler: src/handlers/readAllNotes/index.handler
    events:
      - http:
          path: /all/toDo
          method: get
          
resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.NOTES_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
